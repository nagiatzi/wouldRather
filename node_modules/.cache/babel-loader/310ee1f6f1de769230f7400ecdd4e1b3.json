{"ast":null,"code":";\nimport { _getUsers, _getQuestions, _saveQuestion, _saveQuestionAnswer } from '../utils/_DATA';\nimport { receiveUsers, addQuestionToUser, saveQuestionAnswerToUser } from './users';\nimport { receiveQuestions, addQuestion, saveAnswer } from './questions';\nimport { setAuthedUser } from './authedUser';\nvar AUTHED_ID = localStorage.getItem('loggedUser');\n\nif (AUTHED_ID === 'null') {\n  AUTHED_ID = null;\n}\n\n;\nexport function handleInitialData() {\n  return function (dispatch) {\n    return Promise.all([_getUsers(), _getQuestions()]).then(function (values) {\n      dispatch(receiveUsers(values[0]));\n      dispatch(receiveQuestions(values[1]));\n      dispatch(setAuthedUser(AUTHED_ID));\n    });\n  };\n}\n;\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        authedUser = _getState.authedUser;\n\n    return _saveQuestion({\n      author: authedUser,\n      optionOneText: optionOneText,\n      optionTwoText: optionTwoText\n    }).then(function (question) {\n      dispatch(addQuestion(question));\n      dispatch(addQuestionToUser(authedUser, question.id));\n    });\n  };\n}\n;\nexport function handleSaveQuestionAnswer(id, answer) {\n  return function (dispatch, getState) {\n    var _getState2 = getState(),\n        authedUser = _getState2.authedUser;\n\n    return _saveQuestionAnswer({\n      authedUser: authedUser,\n      qid: id,\n      answer: answer\n    }).then(dispatch(saveAnswer(id, answer, authedUser))).then(dispatch(saveQuestionAnswerToUser(authedUser, id, answer)));\n  };\n}\n;","map":{"version":3,"sources":["/home/nagiatzi/Desktop/wouldYouRather/src/actions/handleQuestion.js"],"names":["_getUsers","_getQuestions","_saveQuestion","_saveQuestionAnswer","receiveUsers","addQuestionToUser","saveQuestionAnswerToUser","receiveQuestions","addQuestion","saveAnswer","setAuthedUser","AUTHED_ID","localStorage","getItem","handleInitialData","dispatch","Promise","all","then","values","handleAddQuestion","optionOneText","optionTwoText","getState","authedUser","author","question","id","handleSaveQuestionAnswer","answer","qid"],"mappings":"AAAA;AACA,SAASA,SAAT,EAAoBC,aAApB,EAAmCC,aAAnC,EAAkDC,mBAAlD,QAA6E,gBAA7E;AACA,SAASC,YAAT,EAAuBC,iBAAvB,EAA0CC,wBAA1C,QAA0E,SAA1E;AACA,SAASC,gBAAT,EAA2BC,WAA3B,EAAwCC,UAAxC,QAA0D,aAA1D;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,IAAIC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAhB;;AACA,IAAIF,SAAS,KAAK,MAAlB,EAA0B;AACxBA,EAAAA,SAAS,GAAG,IAAZ;AACD;;AAAA;AAED,OAAO,SAASG,iBAAT,GAA6B;AAClC,SAAO,UAAAC,QAAQ,EAAI;AACjB,WAAOC,OAAO,CAACC,GAAR,CAAY,CAACjB,SAAS,EAAV,EAAcC,aAAa,EAA3B,CAAZ,EACJiB,IADI,CACE,UAAAC,MAAM,EAAI;AACfJ,MAAAA,QAAQ,CAACX,YAAY,CAACe,MAAM,CAAC,CAAD,CAAP,CAAb,CAAR;AACAJ,MAAAA,QAAQ,CAACR,gBAAgB,CAACY,MAAM,CAAC,CAAD,CAAP,CAAjB,CAAR;AACAJ,MAAAA,QAAQ,CAACL,aAAa,CAACC,SAAD,CAAd,CAAR;AACD,KALI,CAAP;AAMD,GAPD;AAQD;AAAA;AAED,OAAO,SAASS,iBAAT,CAA2BC,aAA3B,EAA0CC,aAA1C,EAAyD;AAC9D,SAAO,UAACP,QAAD,EAAWQ,QAAX,EAAwB;AAAA,oBACNA,QAAQ,EADF;AAAA,QACrBC,UADqB,aACrBA,UADqB;;AAG7B,WAAOtB,aAAa,CAAC;AACnBuB,MAAAA,MAAM,EAAED,UADW;AAEnBH,MAAAA,aAAa,EAAbA,aAFmB;AAGnBC,MAAAA,aAAa,EAAbA;AAHmB,KAAD,CAAb,CAKJJ,IALI,CAKC,UAAAQ,QAAQ,EAAI;AAChBX,MAAAA,QAAQ,CAACP,WAAW,CAACkB,QAAD,CAAZ,CAAR;AACAX,MAAAA,QAAQ,CAACV,iBAAiB,CAACmB,UAAD,EAAaE,QAAQ,CAACC,EAAtB,CAAlB,CAAR;AACD,KARI,CAAP;AASD,GAZD;AAaD;AAAA;AAED,OAAO,SAASC,wBAAT,CAAkCD,EAAlC,EAAsCE,MAAtC,EAA8C;AACnD,SAAO,UAACd,QAAD,EAAWQ,QAAX,EAAwB;AAAA,qBACNA,QAAQ,EADF;AAAA,QACrBC,UADqB,cACrBA,UADqB;;AAG7B,WAAOrB,mBAAmB,CAAE;AAC1BqB,MAAAA,UAAU,EAAVA,UAD0B;AAE1BM,MAAAA,GAAG,EAAEH,EAFqB;AAG1BE,MAAAA,MAAM,EAANA;AAH0B,KAAF,CAAnB,CAKJX,IALI,CAKCH,QAAQ,CAACN,UAAU,CAACkB,EAAD,EAAKE,MAAL,EAAaL,UAAb,CAAX,CALT,EAMJN,IANI,CAMCH,QAAQ,CAACT,wBAAwB,CAACkB,UAAD,EAAaG,EAAb,EAAiBE,MAAjB,CAAzB,CANT,CAAP;AAOD,GAVD;AAWD;AAAA","sourcesContent":[";\nimport { _getUsers, _getQuestions, _saveQuestion, _saveQuestionAnswer } from '../utils/_DATA';\nimport { receiveUsers, addQuestionToUser, saveQuestionAnswerToUser } from './users';\nimport { receiveQuestions, addQuestion, saveAnswer } from './questions';\nimport { setAuthedUser } from './authedUser'\n\nlet AUTHED_ID = localStorage.getItem('loggedUser')\nif (AUTHED_ID === 'null') {\n  AUTHED_ID = null;\n};\n\nexport function handleInitialData() {\n  return dispatch => {\n    return Promise.all([_getUsers(), _getQuestions()])\n      .then( values => {\n        dispatch(receiveUsers(values[0]));\n        dispatch(receiveQuestions(values[1]));\n        dispatch(setAuthedUser(AUTHED_ID));\n      })\n  }\n};\n\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n  return (dispatch, getState) => {\n    const { authedUser } = getState();\n\n    return _saveQuestion({\n      author: authedUser,\n      optionOneText,\n      optionTwoText,\n    })\n      .then(question => {\n        dispatch(addQuestion(question))\n        dispatch(addQuestionToUser(authedUser, question.id))\n      })\n  }\n};\n\nexport function handleSaveQuestionAnswer(id, answer) {\n  return (dispatch, getState) => {\n    const { authedUser } = getState();\n\n    return _saveQuestionAnswer ({\n      authedUser,\n      qid: id,\n      answer,\n    })\n      .then(dispatch(saveAnswer(id, answer, authedUser)))\n      .then(dispatch(saveQuestionAnswerToUser(authedUser, id, answer)));\n  }\n};"]},"metadata":{},"sourceType":"module"}